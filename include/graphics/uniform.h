#pragma once

#include "../type/type.h"

typedef enum 
{
   UNIFORM_FLOAT, 
   UNIFORM_FLOAT_2,
   UNIFORM_FLOAT_3,
   UNIFORM_FLOAT_4,
   UNIFORM_INT,
   UNIFORM_INT_2,
   UNIFORM_INT_3,
   UNIFORM_INT_4,
   UNIFORM_UNSIGNED_INT,
   UNIFORM_UNSIGNED_INT_2,
   UNIFORM_UNSIGNED_INT_3,
   UNIFORM_UNSIGNED_INT_4,
   UNIFORM_FLOAT_ARRAY,
   UNIFORM_FLOAT_2_ARRAY,
   UNIFORM_FLOAT_3_ARRAY,
   UNIFORM_FLOAT_4_ARRAY,
   UNIFORM_INT_ARRAY,
   UNIFORM_INT_2_ARRAY,
   UNIFORM_INT_3_ARRAY,
   UNIFORM_INT_4_ARRAY,
   UNIFORM_UNSIGNED_INT_ARRAY,
   UNIFORM_UNSIGNED_INT_2_ARRAY,
   UNIFORM_UNSIGNED_INT_3_ARRAY,
   UNIFORM_UNSIGNED_INT_4_ARRAY,
   UNIFORM_MAT2_ARRAY,
   UNIFORM_MAT3_ARRAY,
   UNIFORM_MAT4_ARRAY 
} UniformType;

typedef struct
{
    UniformType type;
    char* name;
    void* value;
    uint32 count;
} Uniform;